---
# Source: whoami/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: desafiobry-whoami-svc
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 8000
  selector:
    app: whoami
---
# Source: whoami/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: desafiobry-whoami-deploy
  labels:
    app: whoami
spec:
  replicas: 2
  selector:
    matchLabels:
      app: whoami
  template:
    metadata:
      labels:
        app: whoami
    spec:
      containers:
        - name: whoami
          image: "jwilder/whoami:latest"
          ports:
            - containerPort: 8000
---
# Source: whoami/templates/hpa.yaml
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: desafiobry-whoami-hpa
  namespace: default
  labels:
    app: whoami
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: desafiobry-whoami-deploy
  minReplicas: 2
  maxReplicas: 4
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 80
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 5
      selectPolicy: Max
      policies:
        - type: Percent
          value: 100
          periodSeconds: 60
        - type: Pods
          value: 4
          periodSeconds: 60
    scaleDown:
      stabilizationWindowSeconds: 300
      selectPolicy: Min
      policies:
        - type: Percent
          value: 100
          periodSeconds: 15
        - type: Pods
          value: 4
          periodSeconds: 15
---
# Source: whoami/templates/ingress-observabilidade.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: monitoring-ingress
  namespace: monitoring
  annotations:
    kubernetes.io/ingress.class: traefik
spec:
  rules:
    - host: whoami.local
      http:
        paths:
          - path: /grafana
            pathType: Prefix
            backend:
              service:
                name: loki-grafana
                port:
                  number: 80
          - path: /prometheus
            pathType: Prefix
            backend:
              service:
                name: prometheus-server
                port:
                  number: 80
          - path: /loki
            pathType: Prefix
            backend:
              service:
                name: loki
                port:
                  number: 3100
          - path: /alertmanager
            pathType: Prefix
            backend:
              service:
                name: alertmanager
                port:
                  number: 9093
---
# Source: whoami/templates/ingress-observabilidade.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: monitoring-ingress
  namespace: logging
  annotations:
    kubernetes.io/ingress.class: traefik
spec:
  rules:
    - host: whoami.local
      http:
        paths:
          - path: /loki
            pathType: Prefix
            backend:
              service:
                name: loki
                port:
                  number: 3100
---
# Source: whoami/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: desafiobry-whoami-ingress
spec:
  ingressClassName: traefik
  tls:
    - hosts:
        - whoami.local
      secretName: whoami-tls
  rules:
    - host: whoami.local
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: desafiobry-whoami-svc
                port:
                  number: 80
